grand central dispatch gcd libdispatch technolog develop appl inc optim applic support system multicor processor symmetr multiprocess system implement task parallel base thread pool pattern fundament idea move manag thread pool hand develop close oper system develop inject work packag pool oblivi pool architectur model improv simplic portabl perform gcd first releas mac os also avail io name grand central dispatch refer grand central terminalcit need sourc code librari provid implement gcds servic libdispatch releas appl apach licens septemb port freebsd midnightbsd linux solari attempt make libdispatch work window merg upstream appl port libdispatchdl window ship safari itun sdk provid sinc around origin libdispatch repositori host nick hutchinson deprec favor version part swift core librari creat june new version support platform notabl includ window gcd work allow specif task program run parallel queue execut depend avail process resourc schedul execut avail processor core refer rout appl task express either function block block extens syntax objectivec program languag encapsul code datum singl object way similar closur gcd still use environ block avail grand central dispatch still use thread low level abstract away programm need concern mani detail task gcd lightweight creat queue appl state instruct requir queue work unit gcd creat tradit thread could easili requir sever hundr instruct task grand central dispatch use either creat work item place queue assign event sourc task assign event sourc work unit make block function event trigger work unit place appropri queue describ appl effici creat thread whose sole purpos wait singl event trigger dispatch framework declar sever datum type function creat manipul libdispatch come object model os object partial compat objectivec model result object bridg tollfre objc object two exampl demonstr use grand central dispatch find john siracusa ar technica snow leopard review initi documentbas applic method call analyzedocu may someth like count number word paragraph document normal would quick process may execut main thread without user notic delay press button result show document larg analysi take long time execut main thread wait function finish take long enough user notic applic may even beachbal solut see call mydoc analyz place insid block place one global concurr queue finish run mydoc analyz new block place main queue main thread applic run updat gui necessari gui updat main thread make two small chang develop avoid potenti stall applic see user allow applic make well use hardwar resourc second exampl parallelis loop code run dowork function count time assign ith result ith element array result call summar array loop end unfortun work comput sequenti may need assum dowork nt reli result call make reason call make concurr would gcd dispatchappli run block pass count time place invoc global queue pass block invoc differ number count allow os spread work see fit choos optim number thread run current hardwar system load dispatchappli return block place give queue complet execut guarante work insid origin loop complet call summar programm creat serial queue task know must run serial may execut separ thread new queue would creat like care must take avoid dispatch block queue synchron place anoth block queue guarante deadlock code might follow gcd use throughout maco begin snow leopard appl encourag adopt maco applic develop freebsd develop robert watson announc first adapt major open sourc applic apach http server use gcd via apach gcd mpm multiprocess modul may order illustr program model integr gcd exist largescal multithread applic announc observ gcd mpm one third half number line thread mpm gcd implement libdispatch support pthread nonposix extens develop appl appl chang interfac sinc incept os offici launch gcd mountain lion recent maverick late chang involv make code support pthread user mode kernel privat kernel pthread support reduc shim actual workqueu implement move separ kernel extens system libdispatch implement workqueu use system event facil epol kevent window nt maco kevent use kernel workqueu