softwar design java nativ interfac jni foreign function interfac program framework enabl java code run java virtual machin jvm call call nativ applic program specif hardwar oper system platform librari write languag assembl jni enabl programm write nativ method handl situat applic write entir java program languag eg standard java class librari support platformspecif featur program librari also use modifi exist applic write anoth program languag access java applic mani standard librari class depend jni provid function develop user eg file io sound capabl includ perform platformsensit api implement standard librari allow java applic access function safe platformindepend manner jni framework let nativ method use java object way java code use object nativ method creat java object inspect use object perform task nativ method also inspect use object creat java applic code applic sign applet invok jni applic reli jni lose platform portabl java offer partial workaround write separ implement jni code platform java detect oper system load correct one runtim nativ code interfac java also draw java canva possibl java awt nativ interfac process almost chang java awt nativ interfac avail sinc jse jni also allow direct access assembl code without even go bridg access java applic assembl possibl way jni framework nativ function implement separ cpp file provid slight simpl interfac jni jvm invok function pass jnienv pointer jobject pointer java argument declar java method exampl follow convert java string nativ string env pointer structur contain interfac jvm includ function necessari interact jvm work java object exampl jni function convert nativ array tofrom java array convert nativ string tofrom java string instanti object throw except etc basic anyth java code use jnienv albeit consider less eas argument obj refer java object insid nativ method declar nativ datum type map tofrom java datum type compound type object array string nativ code must explicit convert datum call method jnienv jni environ pointer jnienv pass argument nativ function map java method allow interact jni environ within nativ method jni interfac pointer store remain valid current thread thread must first call attachcurrentthread attach vm obtain jni interfac pointer attach nativ thread work like regular java thread run within nativ method nativ thread remain attach vm call detachcurrentthread detach jni framework provid automat garbag collect nonjvm memori resourc alloc code execut nativ side consequ nativ side code assembl languag assum respons explicit releas memori resourc nativ code acquir linux solari platform nativ code regist signal handler could intercept signal intend jvm chain respons use allow nativ code well interoper jvm window platform structur except handl seh may employ wrap nativ code seh trycatch block captur machin cpufpu generat softwar interrupt null pointer access violat dividebyzero oper handl situat interrupt propag back jvm ie java side code likelihood result unhandl exceptionorigin research encod use newstringutf getstringutflength getstringutfchar releasestringutfchar getstringutfregion function modifi utf valid utf input differ encod realli null charact codepoint basic multilingu plane great equal ie repres surrog pair utf encod differ modifi utf mani program actual use function incorrect treat utf string return pass function standard utf string instead modifi utf string program use newstr getstringlength getstringchar releasestringchar getstringregion getstringcrit releasestringcrit function use utfl encod littleendian architectur utfb bigendian architectur use utf utf convers routineorigin research follow tabl show map type java jni nativ code long longintt addit signatur fullyqualifiedclass would mean class uniqu specifi name eg signatur ljavalangstr refer class javalangstr also prefix signatur make array type exampl mean int array type final void signatur use code type interchang one use jint normal use int vice versa without typecast requir howev map java string array nativ string array differ jstring use char would code could crash jvmorigin research jni incur consider overhead perform loss certain circumst microsoft proprietari implement java virtual machin visual similar mechan call nativ code java call raw nativ interfac rni addit easi way call exist nativ code nt awar java limit window api call jdirect howev follow sunmicrosoft litig implement visual long maintain rni less clumsi use jni bookkeep java environ pointer need instead java object could access direct facilit tool use generat header file java class similar jdirect easi use use necessari intermedi nativ librari jni java nativ access jna communitydevelop librari provid java program easi access nativ share librari without use jni